name: Import GitHub Security Advisories

on:
  schedule:
    # Run at 3 AM UTC every day
    - cron: '0 3 * * *'
  workflow_dispatch:
    # Allow manual triggering
    inputs:
      repo:
        description: 'Fetch advisories for just one specific org or repository e.g., org/repo.jl'
        required: false
        type: string

jobs:
  fetch-advisories:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Julia
      uses: julia-actions/setup-julia@v1
      with:
        version: '1.11'

    - name: Checkout osv-schema
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: JuliaComputing/osv-schema
        ref: juliahub/julia
        path: osv-schema
    - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: "3.13"
        cache: pipenv
        cache-dependency-path: osv-schema/tools/ghsa/Pipfile.lock

    - name: Install Julia dependencies
      run: |
        julia --project=. -e 'using Pkg; Pkg.instantiate()'

    - name: Install pipenv and Python dependencies
      run: |
        pip install pipenv==2025.0.3
        cd osv-schema/tools/ghsa
        pipenv sync

    - name: Run advisory fetcher script
      run: |
        julia --project=. scripts/fetch_github_advisories.jl $RUNNER_TEMP/ghsa ${{ inputs.repo }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Run GHSA -> OSV converter script
      run: |
        cd osv-schema/tools/ghsa
        mkdir -p $RUNNER_TEMP/osv
        pipenv run python convert_ghsa.py -o $RUNNER_TEMP/osv $RUNNER_TEMP/ghsa/*.json

    - name: Import OSV files into `packages/General`
      run: |
        julia --project=. scripts/import_osv_files.jl $RUNNER_TEMP/osv

    - name: Check for changes
      id: git-check
      run: |
        [[ $(git ls-files --others --modified --exclude-standard) ]] && echo "changes=true" >> $GITHUB_OUTPUT || echo "no changes"

    - name: Create Pull Request
      if: steps.git-check.outputs.changes == 'true'
      uses: peter-evans/create-pull-request@v7
